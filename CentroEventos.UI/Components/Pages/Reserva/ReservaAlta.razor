@page "/eventos/{EventoId:int}/reservas/agregar"
@page "/personas/{PersonaId:int}/reservas/agregar"

@layout MainLayout
@rendermode InteractiveServer

@using CentroEventos.UI.Components.Forms

@inject AuthenticationStateProvider AuthProvider
@inject ReservaCrearUseCase ReservaAltaUseCase
@inject NavigationManager NavigationManager

<PageTitle>Crear Reserva</PageTitle>

<div class="container-md mt-4" style="max-width: 600px;">
    <header>
        <h4>Crear Reserva</h4>
    </header>
    <main>
        <ReservaForm
            EventoId="@EventoId"
            PersonaId="@PersonaId"
            UsuarioId="@UsuarioId"
            GuardarCambios="GuardarReserva"
            TextoBoton="Crear Reserva"
            MensajeDeError="@MensajeDeError"
            GuardandoCambios="@Guardando"
        />
    </main>
</div>

@code {
    [Parameter] public int EventoId { get; set; }
    [Parameter] public int PersonaId { get; set; } = 0;
    private string? MensajeDeError;
    private bool Guardando = false;
    private int UsuarioId = 0;

    protected override void OnInitialized()
    {
        var customAuthenticationStateProvider = (CustomAuthStateProvider)AuthProvider;
        UsuarioId = customAuthenticationStateProvider.ExtractUserId();
    }

    private void GuardarReserva(Reserva reserva)
    {
        if (Guardando) return;
        Guardando = true;
        MensajeDeError = null;
        try
        {
            ReservaAltaUseCase.Ejecutar(
                UsuarioId,
                reserva.PersonaId,
                reserva.EventoDeportivoId
            );
            NavigationManager.NavigateTo($"/eventos/{(reserva.EventoDeportivoId)}/reservas");
        }
        catch (Exception ex)
        {
            MensajeDeError = $"Error al crear la reserva: {ex.Message}";
        }
        finally
        {
            Guardando = false;
            StateHasChanged();
        }
    }
}
