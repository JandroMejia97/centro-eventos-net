@page "/personas/agregar"
@layout MainLayout

@rendermode InteractiveServer

@using CentroEventos.Aplicacion.Servicios
@using CentroEventos.Aplicacion.Enums
@using CentroEventos.UI.Components.Forms

@inject IServicioAutorizacion ServicioAutorizacion
@inject AuthenticationStateProvider AuthProvider
@inject UsuarioCrearUseCase CrearUsuarioUseCase
@inject NavigationManager Navigation

<div class="container-md mt-4" style="max-width: 600px;">
    <header>
        <h4 class="text-center">Creación de Persona</h4>
    </header>
    <main>
        <PersonaForm
            TextoBoton="Crear"
            MensajeDeExito="@MensajeDeExito"
            MensajeDeError="@MensajeDeError"
            GuardarCambiosDelegado="CrearPersona"
            PermitirCambiarPermisos="@PermitirCambiarPermisos"
        />
    </main>
</div>


@code {
    private string? MensajeDeError;
    private string MensajeDeExito = string.Empty;
    private Usuario UsuarioACrear { get; set; } = null!;
    private int UsuarioId { get; set; } = 0;
    private bool PermitirCambiarPermisos = false;
    protected override void OnInitialized()
    {
        var customAuthenticationStateProvider = (CustomAuthStateProvider)AuthProvider;
        UsuarioId = customAuthenticationStateProvider.ExtractUserId();
        PermitirCambiarPermisos = ServicioAutorizacion.Autorizar(UsuarioId, Permiso.AsignarPermisos);
    }

    private void CrearPersona(Usuario usuario)
    {
        MensajeDeError = null;
        UsuarioACrear = usuario;
        try
        {
            CrearUsuarioUseCase.Ejecutar(usuario, usuario.ContrasenaHash);
            MensajeDeExito = $"Se créo {@UsuarioACrear!.Persona.NombreCompleto} con éxito.";
            Navigation.NavigateTo("/personas");
        }
        catch (Exception ex)
        {
            MensajeDeError = ex.Message;
        }
    }
}