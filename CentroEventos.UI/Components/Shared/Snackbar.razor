@code {
    [Parameter] public string Message { get; set; } = "";
    [Parameter] public int Duration { get; set; } = 3000;
    [Parameter] public bool Show { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    override protected async Task OnInitializedAsync()
    {
        if (Duration > 0)
        {
            await Task.Delay(Duration);
            await Close();
        }
    }

    private async Task Close()
    {
        Show = false;
        await OnClose.InvokeAsync();
        StateHasChanged();
    }
}

@if (Show)
{
    <div class="toast show position-fixed bottom-0 end-0 m-4" style="z-index: 9999; min-width: 250px;">
        <div class="toast-header bg-success text-white">
            <strong class="me-auto">Ã‰xito</strong>
            <button type="button" class="btn-close btn-close-white" @onclick="Close"></button>
        </div>
        <div class="toast-body">
            @Message
        </div>
    </div>
}
